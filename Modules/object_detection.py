# -*- coding: utf-8 -*-
"""Object Detection using Tensornets.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dD9SicNxkj95WgI5l8zjM1-fsxhuYc4O
"""

# !pip install git+https://github.com/taehoonlee/tensornets.git

import tensorflow.compat.v1 as tf

import tensornets as nets
import cv2
import numpy as np

import time


import matplotlib.pyplot as plt

# s=0

def check_frame(frame):
    tf.disable_v2_behavior()
    
    inputs = tf.placeholder(tf.float32, [None, 416, 416, 3])
    model = nets.YOLOv3COCO(inputs, nets.Darknet19)
    classes={'0':'person'} # '1':'bicycle','2':'car','3':'bike','5':'bus','7':'truck'
    list_of_classes=[0,1,2,3,5,7]

    with tf.Session() as sess:
        sess.run(model.pretrained())
        
        print('Checking Frame')
        
        img=cv2.resize(frame,(416,416))
        imge=np.array(img).reshape(-1,416,416,3)
        start_time=time.time()

        preds = sess.run(model.preds, {inputs: model.preprocess(imge)})
        boxes = model.get_boxes(preds, imge.shape[1:3])
        
        boxes1=np.array(boxes)
        
        ret={}

        for j in list_of_classes:
            count =0
            if str(j) in classes:
                lab=classes[str(j)]
            if len(boxes1) !=0:
                for i in range(len(boxes1[j])):
                    box=boxes1[j][i] 
                    
                    if boxes1[j][i][4]>=.40:
                                                
                        count += 1    

                        cv2.rectangle(img,(box[0],box[1]),(box[2],box[3]),(0,255,0),1)
            
            ret[lab]=count
    
        return ret